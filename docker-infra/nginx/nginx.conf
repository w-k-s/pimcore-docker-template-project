user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        upstream php-pimcore5 {
            server unix:/var/run/php/pimcore5.sock;
        }

        server {
            listen 80;
            server_name pimcore.loc;
            root /var/www/pimcore/web;
            index index.php;

            access_log  /var/log/access.log;
            error_log   /var/log/error.log error;

            # Pimcore Head-Link Cache-Busting
            rewrite ^/cache-buster-(?:\d+)/(.*) /$1 last;

            # Stay secure
            #
            # a) don't allow PHP in folders allowing file uploads
            location ~* /var/assets/.*\.php(/|$) {
                return 404;
            }
            # b) Prevent clients from accessing hidden files (starting with a dot)
            # Access to `/.well-known/` is allowed.
            # https://www.mnot.net/blog/2010/04/07/well-known
            # https://tools.ietf.org/html/rfc5785
            location ~* /\.(?!well-known/) {
                deny all;
                log_not_found off;
                access_log off;
            }
            # c) Prevent clients from accessing to backup/config/source files
            location ~* (?:\.(?:bak|conf(ig)?|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
                deny all;
            }

            # Some Admin Modules need this:
            # Database Admin, Server Info
            location ~* ^/admin/(adminer|external) {
                rewrite .* /app.php$is_args$args last;
            }
            
            # Thumbnails
            location ~* .*/(image|video)-thumb__\d+__.* {
                try_files /var/tmp/$1-thumbnails$uri /app.php;
                expires 2w;
                access_log off;
                add_header Cache-Control "public";
            }

            # Assets
            # Still use a whitelist approach to prevent each and every missing asset to go through the PHP Engine.
            location ~* ^(?!/admin/asset/webdav/)(.+?)\.((?:css|js)(?:\.map)?|jpe?g|gif|png|svgz?|eps|exe|gz|zip|mp\d|ogg|ogv|webm|pdf|docx?|xlsx?|pptx?)$ {
                try_files /var/assets$uri $uri =404;
                expires 2w;
                access_log off;
                log_not_found off;
                add_header Cache-Control "public";
            }

            location / {
                error_page 404 /meta/404;
                add_header "X-UA-Compatible" "IE=edge";
                try_files $uri /app.php$is_args$args;
            }

            # Use this location when the installer has to be run
            # location ~ /(app|install)\.php(/|$) {
            #
            # Use this after initial install is done:
            location ~ ^/app\.php(/|$) {
                send_timeout 1800;
                fastcgi_read_timeout 1800;
                # regex to split $uri to $fastcgi_script_name and $fastcgi_path
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                # Check that the PHP script exists before passing it
                try_files $fastcgi_script_name =404;
                include fastcgi.conf;
                # Bypass the fact that try_files resets $fastcgi_path_info
                # see: http://trac.nginx.org/nginx/ticket/321
                set $path_info $fastcgi_path_info;
                fastcgi_param PATH_INFO $path_info;

                # Activate these, if using Symlinks and opcache
                #Â Must match the path of the script in the pimcore container
                fastcgi_param SCRIPT_FILENAME /usr/src/app/web/$fastcgi_script_name;
                # fastcgi_param DOCUMENT_ROOT $realpath_root;

                fastcgi_pass pimcore:9000;
                # Prevents URIs that include the front controller. This will 404:
                # http://domain.tld/app.php/some-path
                # Remove the internal directive to allow URIs like this
                internal;
            }

            # PHP-FPM Status and Ping
            location /fpm- {
                access_log off;
                include fastcgi_params;
                location /fpm-status {
                    allow 127.0.0.1;
                    # add additional IP's or Ranges
                    deny all;
                    fastcgi_pass pimcore:9000;
                }
                location /fpm-ping {
                    fastcgi_pass pimcore:9000;
                }
            }
            # nginx Status
            # see: https://nginx.org/en/docs/http/ngx_http_stub_status_module.html
            location /nginx-status {
                allow 127.0.0.1;
                deny all;
                access_log off;
                stub_status;
            }
        }
    }